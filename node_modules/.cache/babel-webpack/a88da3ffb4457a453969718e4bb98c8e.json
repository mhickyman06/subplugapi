{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\n\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\n\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\n\n\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\n\nfunction _resolveDirectionality(rawValue) {\n  const value = (rawValue === null || rawValue === void 0 ? void 0 : rawValue.toLowerCase()) || '';\n\n  if (value === 'auto' && typeof navigator !== 'undefined' && (navigator === null || navigator === void 0 ? void 0 : navigator.language)) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n\n\nclass Directionality {\n  constructor(_document) {\n    /** The current 'ltr' or 'rtl' value. */\n    this.value = 'ltr';\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n\n    this.change = new EventEmitter();\n\n    if (_document) {\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: Directionality,\n  deps: [{\n    token: DIR_DOCUMENT,\n    optional: true\n  }],\n  target: i0.ɵɵFactoryTarget.Injectable\n});\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: Directionality,\n  providedIn: 'root'\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: Directionality,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DIR_DOCUMENT]\n      }]\n    }];\n  }\n});\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n\nclass Dir {\n  constructor() {\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    this._dir = 'ltr';\n    /** Whether the `value` has been set to its initial value. */\n\n    this._isInitialized = false;\n    /** Event emitted when the direction changes. */\n\n    this.change = new EventEmitter();\n  }\n  /** @docs-private */\n\n\n  get dir() {\n    return this._dir;\n  }\n\n  set dir(value) {\n    const previousValue = this._dir; // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n    // whereas the browser does it based on the content of the element. Since doing so based\n    // on the content can be expensive, for now we're doing the simpler matching.\n\n    this._dir = _resolveDirectionality(value);\n    this._rawDir = value;\n\n    if (previousValue !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n  /** Current layout direction of the element. */\n\n\n  get value() {\n    return this.dir;\n  }\n  /** Initialize once default value has been set. */\n\n\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n\n}\n\nDir.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: Dir,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nDir.ɵdir = i0.ɵɵdefineDirective({\n  type: Dir,\n  selectors: [[\"\", \"dir\", \"\"]],\n  hostVars: 1,\n  hostBindings: function Dir_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx._rawDir);\n    }\n  },\n  inputs: {\n    dir: \"dir\"\n  },\n  outputs: {\n    change: \"dirChange\"\n  },\n  exportAs: [\"dir\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: Directionality,\n    useExisting: Dir\n  }])]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: Dir,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[dir]',\n      providers: [{\n        provide: Directionality,\n        useExisting: Dir\n      }],\n      host: {\n        '[attr.dir]': '_rawDir'\n      },\n      exportAs: 'dir'\n    }]\n  }],\n  propDecorators: {\n    change: [{\n      type: Output,\n      args: ['dirChange']\n    }],\n    dir: [{\n      type: Input\n    }]\n  }\n});\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass BidiModule {}\n\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: BidiModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: BidiModule,\n  declarations: [Dir],\n  exports: [Dir]\n});\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: BidiModule\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.0\",\n  ngImport: i0,\n  type: BidiModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      exports: [Dir],\n      declarations: [Dir]\n    }]\n  }]\n});\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality }; //# sourceMappingURL=bidi.mjs.map","map":{"version":3,"sources":["C:/Users/HI/Documents/Subplug/node_modules/@angular/cdk/fesm2015/bidi.mjs"],"names":["i0","InjectionToken","inject","EventEmitter","Injectable","Optional","Inject","Directive","Output","Input","NgModule","DOCUMENT","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","toLowerCase","navigator","language","test","Directionality","constructor","_document","change","bodyDir","body","dir","htmlDir","documentElement","ngOnDestroy","complete","ɵfac","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","token","optional","target","ɵɵFactoryTarget","ɵprov","ɵɵngDeclareInjectable","ɵɵngDeclareClassMetadata","decorators","args","ctorParameters","undefined","Dir","_dir","_isInitialized","previousValue","_rawDir","emit","ngAfterContentInit","ɵdir","provide","useExisting","selector","providers","host","exportAs","propDecorators","BidiModule","ɵmod","ɵɵngDeclareNgModule","declarations","exports","ɵinj","ɵɵngDeclareInjector"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = (rawValue === null || rawValue === void 0 ? void 0 : rawValue.toLowerCase()) || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && (navigator === null || navigator === void 0 ? void 0 : navigator.language)) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DIR_DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n//# sourceMappingURL=bidi.mjs.map\n"]},"metadata":{},"sourceType":"module"}