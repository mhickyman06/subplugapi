{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CountUp } from 'countup.js';\nimport { isPlatformBrowser } from '@angular/common';\n\nclass CountUpDirective {\n  constructor(el, zone, platformId) {\n    this.el = el;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.options = {};\n    this.reanimateOnClick = true; // eslint-disable-next-line @angular-eslint/no-output-native\n\n    this.complete = new EventEmitter();\n  } // Re-animate if preference is set.\n\n\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  ngOnChanges(changes) {\n    // don't animate server-side (universal)\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    if (changes.endVal && changes.endVal.currentValue !== undefined) {\n      if (this.previousEndVal !== undefined) {\n        this.options = Object.assign(Object.assign({}, this.options), {\n          startVal: this.previousEndVal\n        });\n      }\n\n      this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n      this.animate();\n      this.previousEndVal = this.endVal;\n    }\n  }\n\n  animate() {\n    this.zone.runOutsideAngular(() => {\n      this.countUp.reset();\n      this.countUp.start(() => {\n        this.zone.run(() => {\n          this.complete.emit();\n        });\n      });\n    });\n  }\n\n}\n\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.2\",\n  ngImport: i0,\n  type: CountUpDirective,\n  deps: [{\n    token: i0.ElementRef\n  }, {\n    token: i0.NgZone\n  }, {\n    token: PLATFORM_ID\n  }],\n  target: i0.ɵɵFactoryTarget.Directive\n});\nCountUpDirective.ɵdir = i0.ɵɵdefineDirective({\n  type: CountUpDirective,\n  selectors: [[\"\", \"countUp\", \"\"]],\n  hostBindings: function CountUpDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CountUpDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    endVal: [\"countUp\", \"endVal\"],\n    options: \"options\",\n    reanimateOnClick: \"reanimateOnClick\"\n  },\n  outputs: {\n    complete: \"complete\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.2\",\n  ngImport: i0,\n  type: CountUpDirective,\n  decorators: [{\n    type: Directive,\n    args: [{\n      selector: '[countUp]'\n    }]\n  }],\n  ctorParameters: function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  },\n  propDecorators: {\n    endVal: [{\n      type: Input,\n      args: ['countUp']\n    }],\n    options: [{\n      type: Input\n    }],\n    reanimateOnClick: [{\n      type: Input\n    }],\n    complete: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  }\n});\n\nclass CountUpModule {}\n\nCountUpModule.ɵfac = i0.ɵɵngDeclareFactory({\n  minVersion: \"12.0.0\",\n  version: \"13.2.2\",\n  ngImport: i0,\n  type: CountUpModule,\n  deps: [],\n  target: i0.ɵɵFactoryTarget.NgModule\n});\nCountUpModule.ɵmod = i0.ɵɵngDeclareNgModule({\n  minVersion: \"12.0.0\",\n  version: \"13.2.2\",\n  ngImport: i0,\n  type: CountUpModule,\n  declarations: [CountUpDirective],\n  exports: [CountUpDirective]\n});\nCountUpModule.ɵinj = i0.ɵɵngDeclareInjector({\n  minVersion: \"12.0.0\",\n  version: \"13.2.2\",\n  ngImport: i0,\n  type: CountUpModule,\n  imports: [[]]\n});\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"13.2.2\",\n  ngImport: i0,\n  type: CountUpModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      imports: [],\n      declarations: [CountUpDirective],\n      exports: [CountUpDirective]\n    }]\n  }]\n});\n/*\n * Public API Surface of count-up\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountUpDirective, CountUpModule }; //# sourceMappingURL=ngx-countup.mjs.map","map":{"version":3,"sources":["C:/Users/HI/Documents/Subplug/node_modules/ngx-countup/fesm2015/ngx-countup.mjs"],"names":["i0","EventEmitter","PLATFORM_ID","Directive","Inject","Input","Output","HostListener","NgModule","CountUp","isPlatformBrowser","CountUpDirective","constructor","el","zone","platformId","options","reanimateOnClick","complete","onClick","animate","ngOnChanges","changes","endVal","currentValue","undefined","previousEndVal","Object","assign","startVal","countUp","nativeElement","runOutsideAngular","reset","start","run","emit","ɵfac","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","token","ElementRef","NgZone","target","ɵɵFactoryTarget","ɵdir","ɵɵngDeclareClassMetadata","decorators","args","selector","ctorParameters","propDecorators","CountUpModule","ɵmod","ɵɵngDeclareNgModule","declarations","exports","ɵinj","ɵɵngDeclareInjector","imports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CountUp } from 'countup.js';\nimport { isPlatformBrowser } from '@angular/common';\n\nclass CountUpDirective {\n    constructor(el, zone, platformId) {\n        this.el = el;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.options = {};\n        this.reanimateOnClick = true;\n        // eslint-disable-next-line @angular-eslint/no-output-native\n        this.complete = new EventEmitter();\n    }\n    // Re-animate if preference is set.\n    onClick() {\n        if (this.reanimateOnClick) {\n            this.animate();\n        }\n    }\n    ngOnChanges(changes) {\n        // don't animate server-side (universal)\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (changes.endVal && changes.endVal.currentValue !== undefined) {\n            if (this.previousEndVal !== undefined) {\n                this.options = Object.assign(Object.assign({}, this.options), { startVal: this.previousEndVal });\n            }\n            this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n            this.animate();\n            this.previousEndVal = this.endVal;\n        }\n    }\n    animate() {\n        this.zone.runOutsideAngular(() => {\n            this.countUp.reset();\n            this.countUp.start(() => {\n                this.zone.run(() => {\n                    this.complete.emit();\n                });\n            });\n        });\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nCountUpDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.2\", type: CountUpDirective, selector: \"[countUp]\", inputs: { endVal: [\"countUp\", \"endVal\"], options: \"options\", reanimateOnClick: \"reanimateOnClick\" }, outputs: { complete: \"complete\" }, host: { listeners: { \"click\": \"onClick()\" } }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[countUp]'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { endVal: [{\n                type: Input,\n                args: ['countUp']\n            }], options: [{\n                type: Input\n            }], reanimateOnClick: [{\n                type: Input\n            }], complete: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass CountUpModule {\n}\nCountUpModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCountUpModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, declarations: [CountUpDirective], exports: [CountUpDirective] });\nCountUpModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: CountUpModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [],\n                    declarations: [CountUpDirective],\n                    exports: [CountUpDirective]\n                }]\n        }] });\n\n/*\n * Public API Surface of count-up\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountUpDirective, CountUpModule };\n//# sourceMappingURL=ngx-countup.mjs.map\n"]},"metadata":{},"sourceType":"module"}