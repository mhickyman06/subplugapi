{"version":3,"file":"select.component.d.ts","sources":["select.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { AfterContentInit, ElementRef, EventEmitter, QueryList, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { SelectModel } from './select.model';\nimport { SelectOptionComponent } from './select-option/select-option.component';\nimport { SelectOptionModel } from './select-option/select-option.model';\nexport declare class SelectComponent implements ControlValueAccessor, AfterContentInit, SelectModel {\n    private renderer;\n    static readonly defaultProps: SelectModel;\n    backdropRef: ElementRef;\n    labelContainerRef: ElementRef;\n    selectElementRef: ElementRef;\n    options: QueryList<SelectOptionComponent>;\n    onChangeEmitter: EventEmitter<string | number | boolean | null>;\n    className: string;\n    disabled: boolean;\n    floatLabel: string;\n    id: string | null;\n    isNativeControl: boolean;\n    name: string;\n    required: boolean;\n    value: string | number | boolean | null;\n    prefix: string;\n    isFocused: boolean;\n    isOpen: boolean;\n    valueLabel: string;\n    constructor(renderer: Renderer2);\n    ngAfterContentInit(): void;\n    registerOptions(): void;\n    updateControl(value: string | number | boolean | null): void;\n    onChangeOption(value: string | number | boolean | null): void;\n    activeSelectedOption(value: string | number | boolean | null): void;\n    cloneOption(selectedOption: SelectOptionComponent): void;\n    onChangeNativeOption(event: any): void;\n    onBlur(): void;\n    onFocus(): void;\n    onClick(): void;\n    addBackdropListener(): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(value: string | number | boolean | null): void;\n    registerOnChange(fn: (value: string | number | boolean | null) => void): void;\n    registerOnTouched(fn: () => void): void;\n    onChange(value: string | number | boolean | null): void;\n    onTouched(): void;\n    activeSelectClass(selectedOption: SelectOptionModel): void;\n}\n"]}