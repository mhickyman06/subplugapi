/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { AfterContentInit, ElementRef, EventEmitter, QueryList, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { SelectModel } from './select.model';
import { SelectOptionComponent } from './select-option/select-option.component';
import { SelectOptionModel } from './select-option/select-option.model';
export declare class SelectComponent implements ControlValueAccessor, AfterContentInit, SelectModel {
    private renderer;
    static readonly defaultProps: SelectModel;
    backdropRef: ElementRef;
    labelContainerRef: ElementRef;
    selectElementRef: ElementRef;
    options: QueryList<SelectOptionComponent>;
    onChangeEmitter: EventEmitter<string | number | boolean | null>;
    className: string;
    disabled: boolean;
    floatLabel: string;
    id: string | null;
    isNativeControl: boolean;
    name: string;
    required: boolean;
    value: string | number | boolean | null;
    prefix: string;
    isFocused: boolean;
    isOpen: boolean;
    valueLabel: string;
    constructor(renderer: Renderer2);
    ngAfterContentInit(): void;
    registerOptions(): void;
    updateControl(value: string | number | boolean | null): void;
    onChangeOption(value: string | number | boolean | null): void;
    activeSelectedOption(value: string | number | boolean | null): void;
    cloneOption(selectedOption: SelectOptionComponent): void;
    onChangeNativeOption(event: any): void;
    onBlur(): void;
    onFocus(): void;
    onClick(): void;
    addBackdropListener(): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: string | number | boolean | null): void;
    registerOnChange(fn: (value: string | number | boolean | null) => void): void;
    registerOnTouched(fn: () => void): void;
    onChange(value: string | number | boolean | null): void;
    onTouched(): void;
    activeSelectClass(selectedOption: SelectOptionModel): void;
}
