/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { AfterContentInit, ElementRef, EventEmitter, OnChanges, Renderer2 } from '@angular/core';
import { CollapsibleModel } from './collapsible.model';
import * as ɵngcc0 from '@angular/core';
export declare class CollapsibleComponent implements CollapsibleModel, AfterContentInit, OnChanges {
    private renderer;
    static readonly defaultProps: CollapsibleModel;
    onCloseEmitter: EventEmitter<boolean>;
    onOpenEmitter: EventEmitter<boolean>;
    containerRef: ElementRef;
    className: string;
    disabled: boolean;
    isOpen: boolean;
    showIndicator: boolean;
    prefix: string;
    constructor(renderer: Renderer2);
    ngAfterContentInit(): void;
    ngOnChanges(): void;
    onToggle(): void;
    open(): void;
    close(): void;
    update(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CollapsibleComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CollapsibleComponent, "materialize-collapsible }", never, { "className": "className"; "disabled": "disabled"; "isOpen": "isOpen"; "showIndicator": "showIndicator"; }, { "onCloseEmitter": "onClose"; "onOpenEmitter": "onOpen"; }, never, ["materialize-collapsible-title", "materialize-collapsible-content"]>;
}

//# sourceMappingURL=collapsible.component.d.ts.map