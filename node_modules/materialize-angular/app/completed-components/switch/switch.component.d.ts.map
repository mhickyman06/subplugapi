{"version":3,"file":"switch.component.d.ts","sources":["switch.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { SwitchModel } from './switch.model';\nexport declare class SwitchComponent implements ControlValueAccessor, SwitchModel {\n    static readonly defaultProps: SwitchModel;\n    className: string;\n    disabled: boolean;\n    id: string | null;\n    name: string;\n    required: boolean;\n    value: boolean;\n    onChangeEmitter: EventEmitter<boolean>;\n    prefix: string;\n    isFocused: boolean;\n    constructor();\n    toggleValue(): void;\n    onBlur(): void;\n    onFocus(): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(value: boolean): void;\n    registerOnChange(fn: (value: boolean) => void): void;\n    registerOnTouched(fn: () => void): void;\n    onChange(value: boolean): void;\n    onTouched(): void;\n}\n"]}