{"version":3,"file":"ripple.directive.d.ts","sources":["ripple.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { ElementRef, OnInit, Renderer2 } from '@angular/core';\ninterface Coordinate {\n    x: number;\n    y: number;\n}\nexport declare class RippleDirective implements OnInit {\n    private elementRef;\n    private renderer;\n    rippleDuration: number;\n    isRippleActive: boolean;\n    isRippleCenter: boolean;\n    private element;\n    private prefix;\n    constructor(elementRef: ElementRef, renderer: Renderer2);\n    ngOnInit(): void;\n    createRipple(event: any): void;\n    renderRipple(radio: number, coordinate: Coordinate): void;\n    getCoordinatesByCenter(): {\n        x: number;\n        y: number;\n    };\n    getCoordinatesByEvent(event: any): Coordinate;\n    getRippleRadio(coordinate: Coordinate): number;\n    scaleRipple(ripple: HTMLElement): void;\n    hideRipple(ripple: HTMLElement): void;\n    removeRipple(ripple: HTMLElement): void;\n    getOffset(element: HTMLElement): {\n        left: number;\n        top: number;\n    };\n}\nexport {};\n"]}