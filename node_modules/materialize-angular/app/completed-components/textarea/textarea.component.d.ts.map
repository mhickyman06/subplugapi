{"version":3,"file":"textarea.component.d.ts","sources":["textarea.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { TextAreaModel } from './textarea.model';\nexport declare class TextAreaComponent implements ControlValueAccessor, TextAreaModel {\n    static readonly defaultProps: TextAreaModel;\n    onFocusEmitter: EventEmitter<void>;\n    onChangeEmitter: EventEmitter<string>;\n    onBlurEmitter: EventEmitter<void>;\n    className: string;\n    disabled: boolean;\n    floatLabel: string;\n    hasCounter: boolean;\n    id: string | null;\n    maxLength: number;\n    minLength: number;\n    name: string;\n    placeholder: string;\n    required: boolean;\n    rows: number;\n    value: string;\n    prefix: string;\n    isFocused: boolean;\n    constructor();\n    onBlur(): void;\n    onFocus(): void;\n    onChange(event: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(value: string): void;\n    registerOnChange(fn: (value: string) => void): void;\n    registerOnTouched(fn: () => void): void;\n    onTextAreaChange(value: string): void;\n    onTouched(): void;\n}\n"]}