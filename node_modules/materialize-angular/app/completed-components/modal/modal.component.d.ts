/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { AfterViewInit, ElementRef, EventEmitter } from '@angular/core';
import { ModalModel } from './modal.model';
import * as ɵngcc0 from '@angular/core';
export declare class ModalComponent implements AfterViewInit, ModalModel {
    static readonly defaultProps: ModalModel;
    modalRef: ElementRef;
    backdropRef: ElementRef;
    onOpenEmitter: EventEmitter<void>;
    onCloseEmitter: EventEmitter<void>;
    className: string;
    dismissOnBackdrop: boolean;
    hasBackdrop: boolean;
    hasCloseButton: boolean;
    isOpen: boolean;
    transitionDuration: number;
    prefix: string;
    constructor();
    ngAfterViewInit(): void;
    closeByBackdrop(event: Event): void;
    open(): void;
    close(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ModalComponent, "materialize-modal }", never, { "className": "className"; "dismissOnBackdrop": "dismissOnBackdrop"; "hasBackdrop": "hasBackdrop"; "hasCloseButton": "hasCloseButton"; "isOpen": "isOpen"; "transitionDuration": "transitionDuration"; }, { "onOpenEmitter": "onOpen"; "onCloseEmitter": "onClose"; }, never, ["*"]>;
}

//# sourceMappingURL=modal.component.d.ts.map