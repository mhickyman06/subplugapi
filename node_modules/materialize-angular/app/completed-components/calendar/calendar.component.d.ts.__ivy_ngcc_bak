/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { CalendarModel, DateLabel, DateModel, DayLabels, MonthLabels, MonthModel } from './calendar.model';
import { ElementRef, EventEmitter, OnChanges, OnInit } from '@angular/core';
export declare class CalendarComponent implements OnInit, OnChanges {
    static readonly defaultProps: CalendarModel;
    yearsContainerRef: ElementRef;
    onSelectDayEmitter: EventEmitter<DateModel>;
    className: string;
    date: Date;
    displayOtherMonthDays: boolean;
    prefix: string;
    dayLabels: Array<DateLabel>;
    monthLabels: Array<DateLabel>;
    selectedDate: DateModel;
    selectedMonth: MonthModel;
    showYears: boolean;
    weeks: Array<Array<DateModel>>;
    years: Array<number>;
    selectYearAnimationDuration: number;
    constructor();
    ngOnInit(): void;
    ngOnChanges(): void;
    init(): void;
    getDayLabels(dayLabels: DayLabels): Array<DateLabel>;
    getMonthLabels(monthLabels: MonthLabels): Array<DateLabel>;
    createDateModel(date: Date, isOutOfMonth: boolean, isToday: boolean, showSelected: boolean): DateModel;
    createDateObject(day: number, month: number, year: number): Date;
    fillYears(currentYear: number): Array<number>;
    fillWeeks(month: number, year: number): any[];
    isTodayDate(date: Date): boolean;
    createDayDate(date: Date, dayNumber: number, finalMonthDay: Date): DateModel;
    showPrevMonth(): void;
    showNextMonth(): void;
    generateISODate(date: Date): string;
    onSelectDay(date: DateModel): void;
    onSelectYear(year: number): void;
    displayYears(): void;
    scrollToActiveYear(): void;
    getScrollCenter(container: HTMLElement, internalElement: HTMLElement): number;
}
