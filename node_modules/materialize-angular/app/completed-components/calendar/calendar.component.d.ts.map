{"version":3,"file":"calendar.component.d.ts","sources":["calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { CalendarModel, DateLabel, DateModel, DayLabels, MonthLabels, MonthModel } from './calendar.model';\nimport { ElementRef, EventEmitter, OnChanges, OnInit } from '@angular/core';\nexport declare class CalendarComponent implements OnInit, OnChanges {\n    static readonly defaultProps: CalendarModel;\n    yearsContainerRef: ElementRef;\n    onSelectDayEmitter: EventEmitter<DateModel>;\n    className: string;\n    date: Date;\n    displayOtherMonthDays: boolean;\n    prefix: string;\n    dayLabels: Array<DateLabel>;\n    monthLabels: Array<DateLabel>;\n    selectedDate: DateModel;\n    selectedMonth: MonthModel;\n    showYears: boolean;\n    weeks: Array<Array<DateModel>>;\n    years: Array<number>;\n    selectYearAnimationDuration: number;\n    constructor();\n    ngOnInit(): void;\n    ngOnChanges(): void;\n    init(): void;\n    getDayLabels(dayLabels: DayLabels): Array<DateLabel>;\n    getMonthLabels(monthLabels: MonthLabels): Array<DateLabel>;\n    createDateModel(date: Date, isOutOfMonth: boolean, isToday: boolean, showSelected: boolean): DateModel;\n    createDateObject(day: number, month: number, year: number): Date;\n    fillYears(currentYear: number): Array<number>;\n    fillWeeks(month: number, year: number): any[];\n    isTodayDate(date: Date): boolean;\n    createDayDate(date: Date, dayNumber: number, finalMonthDay: Date): DateModel;\n    showPrevMonth(): void;\n    showNextMonth(): void;\n    generateISODate(date: Date): string;\n    onSelectDay(date: DateModel): void;\n    onSelectYear(year: number): void;\n    displayYears(): void;\n    scrollToActiveYear(): void;\n    getScrollCenter(container: HTMLElement, internalElement: HTMLElement): number;\n}\n"]}