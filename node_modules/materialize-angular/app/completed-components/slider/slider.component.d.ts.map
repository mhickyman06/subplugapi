{"version":3,"file":"slider.component.d.ts","sources":["slider.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { AfterContentInit, AfterViewInit, ElementRef, EventEmitter, QueryList, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { SliderModel } from './slider.model';\nimport { SliderOptionComponent } from './slider-option/slider-option.component';\nimport { SupportedEventsModel } from '../../components/common/models/supported-events.model';\nexport declare class SliderComponent implements AfterContentInit, AfterViewInit, ControlValueAccessor, SliderModel {\n    private renderer;\n    static readonly tickClassName: string;\n    static readonly defaultProps: SliderModel;\n    options: QueryList<SliderOptionComponent>;\n    sliderIndicatorContainer: ElementRef;\n    sliderTrack: ElementRef;\n    sliderTrackBackground: ElementRef;\n    sliderTrackInterval: ElementRef;\n    onChangeEmitter: EventEmitter<number | string | boolean | null>;\n    className: string;\n    disabled: boolean;\n    required: boolean;\n    showLabels: boolean;\n    showTicks: boolean;\n    value: number | string | boolean | null;\n    prefix: string;\n    isFocused: boolean;\n    supportedEvents: SupportedEventsModel;\n    constructor(renderer: Renderer2);\n    ngAfterViewInit(): void;\n    ngAfterContentInit(): void;\n    update(): void;\n    registerEventOptions(): void;\n    onOptionClick(value: number | string | boolean | null): void;\n    renderPositions(): void;\n    removeTicks(): void;\n    actionDown(event: any): void;\n    actionMove(event: any): void;\n    actionUp(event: any): void;\n    moveToValue(value: number | string | boolean | null, hasAnimation: boolean): void;\n    activeOption(value: number | string | boolean | null): void;\n    getValueFromXCoordinate(x: number): string | number | boolean;\n    getIndexFromXCoordinate(x: number): number;\n    getXCoordinateByEventType(event: any, eventType: string): number;\n    getXCoordinate(event: any, eventType: string): any;\n    getPixelInterval(): number;\n    animate(x: number, hasAnimation: boolean): void;\n    onFocus(): void;\n    onBlur(): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(value: number | string | boolean | null): void;\n    registerOnChange(fn: (value: number | string | boolean | null) => void): void;\n    registerOnTouched(fn: () => void): void;\n    onChange(value: number | string | boolean | null): void;\n    onTouched(): void;\n}\n"]}