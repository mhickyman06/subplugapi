/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { BUTTON_LEVELS, BUTTON_TYPES, ButtonModel } from './button.model';
import { ElementRef, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class ButtonComponent implements ButtonModel {
    static readonly defaultProps: ButtonModel;
    className: string;
    disabled: boolean;
    level: BUTTON_LEVELS;
    rippleDuration: number;
    type: BUTTON_TYPES;
    onBlurEmitter: EventEmitter<void>;
    onClickEmitter: EventEmitter<void>;
    element: ElementRef;
    prefix: string;
    isFocused: boolean;
    constructor();
    onFocus(): void;
    onClick(): void;
    onBlur(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ButtonComponent, "materialize-button }", never, { "className": "className"; "disabled": "disabled"; "level": "level"; "rippleDuration": "rippleDuration"; "type": "type"; }, { "onBlurEmitter": "onBlur"; "onClickEmitter": "onClick"; }, never, ["*"]>;
}

//# sourceMappingURL=button.component.d.ts.map