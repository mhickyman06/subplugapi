/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { AfterContentInit, EventEmitter, QueryList } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ButtonToggleComponent } from './button-toggle/button-toggle.component';
import { ButtonToggleGroupModel } from './button-toggle-group.model';
export declare class ButtonToggleGroupComponent implements ControlValueAccessor, AfterContentInit, ButtonToggleGroupModel {
    static readonly defaultProps: ButtonToggleGroupModel;
    buttonsQueryList: QueryList<ButtonToggleComponent>;
    onChangeEmitter: EventEmitter<string>;
    canUncheck: boolean;
    className: string;
    disabled: boolean;
    value: string;
    prefix: string;
    isFocused: boolean;
    constructor();
    ngAfterContentInit(): void;
    initButtons(): void;
    disableButtons(disabled: boolean): void;
    registerButtons(): void;
    toggleButton(value: string): void;
    setValueAllButtons(value: string): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: string): void;
    registerOnChange(fn: (value: string) => void): void;
    registerOnTouched(fn: () => void): void;
    onChange(value: string): void;
    onTouched(): void;
}
