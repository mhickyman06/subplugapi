{"version":3,"file":"button-toggle-group.component.d.ts","sources":["button-toggle-group.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Workylab. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE\n */\nimport { AfterContentInit, EventEmitter, QueryList } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ButtonToggleComponent } from './button-toggle/button-toggle.component';\nimport { ButtonToggleGroupModel } from './button-toggle-group.model';\nexport declare class ButtonToggleGroupComponent implements ControlValueAccessor, AfterContentInit, ButtonToggleGroupModel {\n    static readonly defaultProps: ButtonToggleGroupModel;\n    buttonsQueryList: QueryList<ButtonToggleComponent>;\n    onChangeEmitter: EventEmitter<string>;\n    canUncheck: boolean;\n    className: string;\n    disabled: boolean;\n    value: string;\n    prefix: string;\n    isFocused: boolean;\n    constructor();\n    ngAfterContentInit(): void;\n    initButtons(): void;\n    disableButtons(disabled: boolean): void;\n    registerButtons(): void;\n    toggleButton(value: string): void;\n    setValueAllButtons(value: string): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(value: string): void;\n    registerOnChange(fn: (value: string) => void): void;\n    registerOnTouched(fn: () => void): void;\n    onChange(value: string): void;\n    onTouched(): void;\n}\n"]}