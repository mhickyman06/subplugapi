/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { AfterViewInit, ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { DRAWER_POSITIONS, DRAWER_TYPES, DrawerModel } from './drawer.model';
import * as ɵngcc0 from '@angular/core';
export declare class DrawerComponent implements AfterViewInit {
    private renderer;
    static readonly defaultProps: DrawerModel;
    backdropRef: ElementRef;
    drawerRef: ElementRef;
    onOpenEmitter: EventEmitter<void>;
    onCloseEmitter: EventEmitter<void>;
    className: string;
    closeOnBackdrop: boolean;
    hasBackdrop: boolean;
    isOpen: boolean;
    position: DRAWER_POSITIONS;
    transitionDuration: number;
    type: DRAWER_TYPES;
    prefix: string;
    constructor(renderer: Renderer2);
    ngAfterViewInit(): void;
    open(): void;
    closeByBackdrop(event: Event): void;
    close(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DrawerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DrawerComponent, "materialize-drawer }", never, { "className": "className"; "closeOnBackdrop": "closeOnBackdrop"; "hasBackdrop": "hasBackdrop"; "isOpen": "isOpen"; "position": "position"; "transitionDuration": "transitionDuration"; "type": "type"; }, { "onOpenEmitter": "onOpen"; "onCloseEmitter": "onClose"; }, never, ["materialize-drawer-content", "materialize-drawer-container"]>;
}

//# sourceMappingURL=drawer.component.d.ts.map