/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { INPUT_TYPE, InputModel } from './input.model';
export declare class InputComponent implements ControlValueAccessor, InputModel {
    static readonly defaultProps: InputModel;
    onFocusEmitter: EventEmitter<void>;
    onChangeEmitter: EventEmitter<string>;
    onBlurEmitter: EventEmitter<void>;
    autocomplete: string;
    className: string;
    disabled: boolean;
    floatLabel: string;
    hasCounter: boolean;
    id: string | null;
    maxLength: number;
    name: string;
    placeholder: string;
    required: boolean;
    type: INPUT_TYPE;
    value: string;
    prefix: string;
    isFocused: boolean;
    constructor();
    onBlur(): void;
    onFocus(): void;
    onChange(event: any): void;
    setDisabledState(isDisabled: boolean): void;
    writeValue(value: string): void;
    registerOnChange(fn: (value: string) => void): void;
    registerOnTouched(fn: () => void): void;
    onInputChange(value: string): void;
    onTouched(): void;
}
