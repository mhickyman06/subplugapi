/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/scroll-spy/scroll-spy-item/scroll-spy-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, Input } from '@angular/core';
import { config } from '../../../config';
export class ScrollSpyItemComponent {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.element = element;
        this.className = ScrollSpyItemComponent.defaultProps.className;
        this.id = ScrollSpyItemComponent.defaultProps.id;
    }
}
ScrollSpyItemComponent.defaultProps = {
    className: '',
    id: ''
};
ScrollSpyItemComponent.decorators = [
    { type: Component, args: [{
                selector: `${config.components.prefix}-scroll-spy-item`,
                template: "<div [attr.id]=\"id\">\n  <ng-content></ng-content>\n</div>\n"
            }] }
];
/** @nocollapse */
ScrollSpyItemComponent.ctorParameters = () => [
    { type: ElementRef }
];
ScrollSpyItemComponent.propDecorators = {
    className: [{ type: Input }],
    id: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ScrollSpyItemComponent.defaultProps;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.className;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.id;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdGVyaWFsaXplLWFuZ3VsYXIvIiwic291cmNlcyI6WyJhcHAvY29tcGxldGVkLWNvbXBvbmVudHMvc2Nyb2xsLXNweS9zY3JvbGwtc3B5LWl0ZW0vc2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBT3pDLE1BQU0sT0FBTyxzQkFBc0I7Ozs7SUFTakMsWUFBbUIsT0FBbUI7UUFBbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUg3QixjQUFTLEdBQVcsc0JBQXNCLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUNsRSxPQUFFLEdBQVcsc0JBQXNCLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQztJQUc3RCxDQUFDOztBQVRlLG1DQUFZLEdBQXVCO0lBQ2pELFNBQVMsRUFBRSxFQUFFO0lBQ2IsRUFBRSxFQUFFLEVBQUU7Q0FDUCxDQUFDOztZQVJILFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsR0FBSSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU8sa0JBQWtCO2dCQUN6RCx5RUFBK0M7YUFDaEQ7Ozs7WUFQbUIsVUFBVTs7O3dCQWMzQixLQUFLO2lCQUNMLEtBQUs7Ozs7SUFOTixvQ0FHRTs7SUFFRiwyQ0FBMkU7O0lBQzNFLG9DQUE2RDs7SUFFakQseUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcbmltcG9ydCB7IFNjcm9sbFNweUl0ZW1Nb2RlbCB9IGZyb20gJy4vc2Nyb2xsLXNweS1pdGVtLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBgJHsgY29uZmlnLmNvbXBvbmVudHMucHJlZml4IH0tc2Nyb2xsLXNweS1pdGVtYCxcbiAgdGVtcGxhdGVVcmw6ICcuL3Njcm9sbC1zcHktaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2Nyb2xsU3B5SXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIFNjcm9sbFNweUl0ZW1Nb2RlbCB7XG4gIHN0YXRpYyByZWFkb25seSBkZWZhdWx0UHJvcHM6IFNjcm9sbFNweUl0ZW1Nb2RlbCA9IHtcbiAgICBjbGFzc05hbWU6ICcnLFxuICAgIGlkOiAnJ1xuICB9O1xuXG4gIEBJbnB1dCgpIGNsYXNzTmFtZTogc3RyaW5nID0gU2Nyb2xsU3B5SXRlbUNvbXBvbmVudC5kZWZhdWx0UHJvcHMuY2xhc3NOYW1lO1xuICBASW5wdXQoKSBpZDogc3RyaW5nID0gU2Nyb2xsU3B5SXRlbUNvbXBvbmVudC5kZWZhdWx0UHJvcHMuaWQ7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHtcbiAgfVxufVxuIl19