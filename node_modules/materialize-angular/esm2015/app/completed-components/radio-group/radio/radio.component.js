/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/radio-group/radio/radio.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { config } from '../../../config';
export class RadioComponent {
    constructor() {
        this.className = RadioComponent.defaultProps.className;
        this.disabled = RadioComponent.defaultProps.disabled;
        this.id = RadioComponent.defaultProps.id;
        this.name = RadioComponent.defaultProps.name;
        this.required = RadioComponent.defaultProps.required;
        this.value = RadioComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.isActive = false;
        this.isFocused = false;
        this.onClickEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onClick() {
        if (!this.disabled) {
            this.isActive = !this.isActive;
            this.isFocused = false;
            this.onClickEmitter.emit(this.value);
        }
    }
    /**
     * @return {?}
     */
    onBlur() {
        this.isFocused = false;
    }
    /**
     * @return {?}
     */
    onFocus() {
        if (!this.disabled) {
            this.isFocused = true;
        }
    }
}
RadioComponent.defaultProps = {
    className: '',
    disabled: false,
    id: null,
    name: '',
    required: false,
    value: ''
};
RadioComponent.decorators = [
    { type: Component, args: [{
                selector: `${config.components.prefix}-radio }`,
                template: "<div\n  [ngClass]=\"[prefix + '-radio', className]\"\n  [class.active]=\"isActive\"\n  [class.disabled]=\"disabled\"\n  [class.focused]=\"isFocused\"\n  [tabindex]=\"disabled ? '-1': '0'\"\n\n  (click)=\"onClick()\"\n  (blur)=\"onBlur()\"\n  (focus)=\"onFocus()\"\n>\n  <div [ngClass]=\"prefix + '-radio-label'\">\n    <ng-content></ng-content>\n  </div>\n\n  <div [ngClass]=\"prefix + '-radio-indicator'\">\n    <div [ngClass]=\"prefix + '-radio-indicator-ripple'\" materializeRipple [isRippleActive]=\"!disabled\" [rippleDuration]=\"200\"></div>\n  </div>\n\n  <input type=\"radio\" [attr.id]=\"id\" [checked]=\"isActive\" [disabled]=\"disabled\" [name]=\"name\" [required]=\"required\" [value]= \"value\" />\n</div>\n"
            }] }
];
/** @nocollapse */
RadioComponent.ctorParameters = () => [];
RadioComponent.propDecorators = {
    onClickEmitter: [{ type: Output, args: ['onClick',] }],
    className: [{ type: Input }],
    disabled: [{ type: Input }],
    id: [{ type: Input }],
    name: [{ type: Input }],
    required: [{ type: Input }],
    value: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    RadioComponent.defaultProps;
    /** @type {?} */
    RadioComponent.prototype.onClickEmitter;
    /** @type {?} */
    RadioComponent.prototype.className;
    /** @type {?} */
    RadioComponent.prototype.disabled;
    /** @type {?} */
    RadioComponent.prototype.id;
    /** @type {?} */
    RadioComponent.prototype.name;
    /** @type {?} */
    RadioComponent.prototype.required;
    /** @type {?} */
    RadioComponent.prototype.value;
    /** @type {?} */
    RadioComponent.prototype.prefix;
    /** @type {?} */
    RadioComponent.prototype.isActive;
    /** @type {?} */
    RadioComponent.prototype.isFocused;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWF0ZXJpYWxpemUtYW5ndWxhci8iLCJzb3VyY2VzIjpbImFwcC9jb21wbGV0ZWQtY29tcG9uZW50cy9yYWRpby1ncm91cC9yYWRpby9yYWRpby5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFPekMsTUFBTSxPQUFPLGNBQWM7SUF3QnpCO1FBWlMsY0FBUyxHQUFXLGNBQWMsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBQzFELGFBQVEsR0FBWSxjQUFjLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztRQUN6RCxPQUFFLEdBQWtCLGNBQWMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDO1FBQ25ELFNBQUksR0FBVyxjQUFjLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQztRQUNoRCxhQUFRLEdBQVksY0FBYyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7UUFDekQsVUFBSyxHQUFXLGNBQWMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO1FBRXBELFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQU12QyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUV2QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFDM0MsQ0FBQzs7OztJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUMvQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDdEM7SUFDSCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDdkI7SUFDSCxDQUFDOztBQTlDZSwyQkFBWSxHQUFlO0lBQ3pDLFNBQVMsRUFBRSxFQUFFO0lBQ2IsUUFBUSxFQUFFLEtBQUs7SUFDZixFQUFFLEVBQUUsSUFBSTtJQUNSLElBQUksRUFBRSxFQUFFO0lBQ1IsUUFBUSxFQUFFLEtBQUs7SUFDZixLQUFLLEVBQUUsRUFBRTtDQUNWLENBQUM7O1lBWkgsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxHQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTyxVQUFVO2dCQUNqRCw0dEJBQXFDO2FBQ3RDOzs7Ozs2QkFXRSxNQUFNLFNBQUMsU0FBUzt3QkFFaEIsS0FBSzt1QkFDTCxLQUFLO2lCQUNMLEtBQUs7bUJBQ0wsS0FBSzt1QkFDTCxLQUFLO29CQUNMLEtBQUs7Ozs7SUFoQk4sNEJBT0U7O0lBRUYsd0NBQXdEOztJQUV4RCxtQ0FBbUU7O0lBQ25FLGtDQUFrRTs7SUFDbEUsNEJBQTREOztJQUM1RCw4QkFBeUQ7O0lBQ3pELGtDQUFrRTs7SUFDbEUsK0JBQTJEOztJQUUzRCxnQ0FBeUM7O0lBRXpDLGtDQUF5Qjs7SUFDekIsbUNBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZyc7XG5pbXBvcnQgeyBSYWRpb01vZGVsIH0gZnJvbSAnLi9yYWRpby5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LXJhZGlvIH1gLFxuICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFJhZGlvQ29tcG9uZW50IGltcGxlbWVudHMgUmFkaW9Nb2RlbCB7XG4gIHN0YXRpYyByZWFkb25seSBkZWZhdWx0UHJvcHM6IFJhZGlvTW9kZWwgPSB7XG4gICAgY2xhc3NOYW1lOiAnJyxcbiAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgaWQ6IG51bGwsXG4gICAgbmFtZTogJycsXG4gICAgcmVxdWlyZWQ6IGZhbHNlLFxuICAgIHZhbHVlOiAnJ1xuICB9O1xuXG4gIEBPdXRwdXQoJ29uQ2xpY2snKSBvbkNsaWNrRW1pdHRlcjogRXZlbnRFbWl0dGVyPHN0cmluZz47XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBSYWRpb0NvbXBvbmVudC5kZWZhdWx0UHJvcHMuY2xhc3NOYW1lO1xuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbiA9IFJhZGlvQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5kaXNhYmxlZDtcbiAgQElucHV0KCkgaWQ6IHN0cmluZyB8IG51bGwgPSBSYWRpb0NvbXBvbmVudC5kZWZhdWx0UHJvcHMuaWQ7XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZyA9IFJhZGlvQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5uYW1lO1xuICBASW5wdXQoKSByZXF1aXJlZDogYm9vbGVhbiA9IFJhZGlvQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5yZXF1aXJlZDtcbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZyA9IFJhZGlvQ29tcG9uZW50LmRlZmF1bHRQcm9wcy52YWx1ZTtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xuXG4gIHB1YmxpYyBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgcHVibGljIGlzRm9jdXNlZDogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZTtcblxuICAgIHRoaXMub25DbGlja0VtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIH1cblxuICBvbkNsaWNrKCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5pc0FjdGl2ZSA9ICF0aGlzLmlzQWN0aXZlO1xuICAgICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMub25DbGlja0VtaXR0ZXIuZW1pdCh0aGlzLnZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBvbkJsdXIoKSB7XG4gICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZTtcbiAgfVxuXG4gIG9uRm9jdXMoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLmlzRm9jdXNlZCA9IHRydWU7XG4gICAgfVxuICB9XG59XG4iXX0=