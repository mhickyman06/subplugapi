/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/button/button.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { BUTTON_LEVELS, BUTTON_TYPES } from './button.model';
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { config } from '../../config';
export class ButtonComponent {
    constructor() {
        this.className = ButtonComponent.defaultProps.className;
        this.disabled = ButtonComponent.defaultProps.disabled;
        this.level = ButtonComponent.defaultProps.level;
        this.rippleDuration = ButtonComponent.defaultProps.rippleDuration;
        this.type = ButtonComponent.defaultProps.type;
        this.prefix = config.components.prefix;
        this.isFocused = false;
        this.onBlurEmitter = new EventEmitter();
        this.onClickEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onFocus() {
        if (!this.disabled) {
            this.isFocused = true;
        }
    }
    /**
     * @return {?}
     */
    onClick() {
        if (!this.disabled) {
            this.isFocused = false;
            this.onClickEmitter.emit();
        }
    }
    /**
     * @return {?}
     */
    onBlur() {
        this.onBlurEmitter.emit();
        this.isFocused = false;
    }
}
ButtonComponent.defaultProps = {
    className: '',
    disabled: false,
    level: BUTTON_LEVELS.ACCENT,
    rippleDuration: 250,
    type: BUTTON_TYPES.BUTTON
};
ButtonComponent.decorators = [
    { type: Component, args: [{
                selector: `${config.components.prefix}-button }`,
                template: "<button [ngClass]=\"[prefix + '-button', level, className]\"\n  (blur)=\"onBlur()\"\n  (click)=\"onClick()\"\n  (focus)=\"onFocus()\"\n\n  materializeRipple\n  [isRippleActive]=\"!disabled\"\n  [rippleDuration]=\"rippleDuration\"\n  \n  [class.focused]=\"isFocused\"\n  [disabled]=\"disabled\"\n  [type]=\"type\"\n  \n  #element>\n  <ng-content></ng-content>\n</button>\n"
            }] }
];
/** @nocollapse */
ButtonComponent.ctorParameters = () => [];
ButtonComponent.propDecorators = {
    className: [{ type: Input }],
    disabled: [{ type: Input }],
    level: [{ type: Input }],
    rippleDuration: [{ type: Input }],
    type: [{ type: Input }],
    onBlurEmitter: [{ type: Output, args: ['onBlur',] }],
    onClickEmitter: [{ type: Output, args: ['onClick',] }],
    element: [{ type: ViewChild, args: ['element', { static: true },] }]
};
if (false) {
    /** @type {?} */
    ButtonComponent.defaultProps;
    /** @type {?} */
    ButtonComponent.prototype.className;
    /** @type {?} */
    ButtonComponent.prototype.disabled;
    /** @type {?} */
    ButtonComponent.prototype.level;
    /** @type {?} */
    ButtonComponent.prototype.rippleDuration;
    /** @type {?} */
    ButtonComponent.prototype.type;
    /** @type {?} */
    ButtonComponent.prototype.onBlurEmitter;
    /** @type {?} */
    ButtonComponent.prototype.onClickEmitter;
    /** @type {?} */
    ButtonComponent.prototype.element;
    /** @type {?} */
    ButtonComponent.prototype.prefix;
    /** @type {?} */
    ButtonComponent.prototype.isFocused;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdGVyaWFsaXplLWFuZ3VsYXIvIiwic291cmNlcyI6WyJhcHAvY29tcGxldGVkLWNvbXBvbmVudHMvYnV0dG9uL2J1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQWUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQU10QyxNQUFNLE9BQU8sZUFBZTtJQXVCMUI7UUFkUyxjQUFTLEdBQVcsZUFBZSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDM0QsYUFBUSxHQUFZLGVBQWUsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1FBQzFELFVBQUssR0FBa0IsZUFBZSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7UUFDMUQsbUJBQWMsR0FBVyxlQUFlLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQztRQUNyRSxTQUFJLEdBQWlCLGVBQWUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO1FBT3pELFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUl2QyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUV2QixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBQzNDLENBQUM7Ozs7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDdkI7SUFDSCxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDNUI7SUFDSCxDQUFDOzs7O0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFMUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQzs7QUE5Q2UsNEJBQVksR0FBZ0I7SUFDMUMsU0FBUyxFQUFFLEVBQUU7SUFDYixRQUFRLEVBQUUsS0FBSztJQUNmLEtBQUssRUFBRSxhQUFhLENBQUMsTUFBTTtJQUMzQixjQUFjLEVBQUUsR0FBRztJQUNuQixJQUFJLEVBQUUsWUFBWSxDQUFDLE1BQU07Q0FDMUIsQ0FBQzs7WUFYSCxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLEdBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFPLFdBQVc7Z0JBQ2xELCtYQUFzQzthQUN2Qzs7Ozs7d0JBVUUsS0FBSzt1QkFDTCxLQUFLO29CQUNMLEtBQUs7NkJBQ0wsS0FBSzttQkFDTCxLQUFLOzRCQUVMLE1BQU0sU0FBQyxRQUFROzZCQUNmLE1BQU0sU0FBQyxTQUFTO3NCQUVoQixTQUFTLFNBQUMsU0FBUyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTs7OztJQWpCdEMsNkJBTUU7O0lBRUYsb0NBQW9FOztJQUNwRSxtQ0FBbUU7O0lBQ25FLGdDQUFtRTs7SUFDbkUseUNBQThFOztJQUM5RSwrQkFBZ0U7O0lBRWhFLHdDQUFvRDs7SUFDcEQseUNBQXNEOztJQUV0RCxrQ0FBNEQ7O0lBRTVELGlDQUF5Qzs7SUFDekMsb0NBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQlVUVE9OX0xFVkVMUywgQlVUVE9OX1RZUEVTLCBCdXR0b25Nb2RlbCB9IGZyb20gJy4vYnV0dG9uLm1vZGVsJztcbmltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LWJ1dHRvbiB9YCxcbiAgdGVtcGxhdGVVcmw6ICcuL2J1dHRvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnV0dG9uQ29tcG9uZW50IGltcGxlbWVudHMgQnV0dG9uTW9kZWwge1xuICBzdGF0aWMgcmVhZG9ubHkgZGVmYXVsdFByb3BzOiBCdXR0b25Nb2RlbCA9IHtcbiAgICBjbGFzc05hbWU6ICcnLFxuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICBsZXZlbDogQlVUVE9OX0xFVkVMUy5BQ0NFTlQsXG4gICAgcmlwcGxlRHVyYXRpb246IDI1MCxcbiAgICB0eXBlOiBCVVRUT05fVFlQRVMuQlVUVE9OXG4gIH07XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBCdXR0b25Db21wb25lbnQuZGVmYXVsdFByb3BzLmNsYXNzTmFtZTtcbiAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW4gPSBCdXR0b25Db21wb25lbnQuZGVmYXVsdFByb3BzLmRpc2FibGVkO1xuICBASW5wdXQoKSBsZXZlbDogQlVUVE9OX0xFVkVMUyA9IEJ1dHRvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMubGV2ZWw7XG4gIEBJbnB1dCgpIHJpcHBsZUR1cmF0aW9uOiBudW1iZXIgPSBCdXR0b25Db21wb25lbnQuZGVmYXVsdFByb3BzLnJpcHBsZUR1cmF0aW9uO1xuICBASW5wdXQoKSB0eXBlOiBCVVRUT05fVFlQRVMgPSBCdXR0b25Db21wb25lbnQuZGVmYXVsdFByb3BzLnR5cGU7XG5cbiAgQE91dHB1dCgnb25CbHVyJykgb25CbHVyRW1pdHRlcjogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICBAT3V0cHV0KCdvbkNsaWNrJykgb25DbGlja0VtaXR0ZXI6IEV2ZW50RW1pdHRlcjx2b2lkPjtcblxuICBAVmlld0NoaWxkKCdlbGVtZW50JywgeyBzdGF0aWM6IHRydWUgfSkgZWxlbWVudDogRWxlbWVudFJlZjtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xuICBwdWJsaWMgaXNGb2N1c2VkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7XG5cbiAgICB0aGlzLm9uQmx1ckVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgdGhpcy5vbkNsaWNrRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgfVxuXG4gIG9uRm9jdXMoKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLmlzRm9jdXNlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7XG4gICAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyLmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICBvbkJsdXIoKSB7XG4gICAgdGhpcy5vbkJsdXJFbWl0dGVyLmVtaXQoKTtcblxuICAgIHRoaXMuaXNGb2N1c2VkID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==