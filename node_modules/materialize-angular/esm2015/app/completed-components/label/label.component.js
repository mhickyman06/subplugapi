/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/label/label.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, Input } from '@angular/core';
import { config } from '../../config';
export class LabelComponent {
    constructor() {
        this.className = LabelComponent.defaultProps.className;
        this.prefix = config.components.prefix;
    }
}
LabelComponent.defaultProps = {
    className: ''
};
LabelComponent.decorators = [
    { type: Component, args: [{
                selector: `${config.components.prefix}-label }`,
                template: "<label [ngClass]=\"[prefix + '-label', className]\">\n  <ng-content></ng-content>\n</label>\n"
            }] }
];
LabelComponent.propDecorators = {
    className: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    LabelComponent.defaultProps;
    /** @type {?} */
    LabelComponent.prototype.className;
    /** @type {?} */
    LabelComponent.prototype.prefix;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWF0ZXJpYWxpemUtYW5ndWxhci8iLCJzb3VyY2VzIjpbImFwcC9jb21wbGV0ZWQtY29tcG9uZW50cy9sYWJlbC9sYWJlbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQU90QyxNQUFNLE9BQU8sY0FBYztJQUozQjtRQVNXLGNBQVMsR0FBVyxjQUFjLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUU1RCxXQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7SUFDM0MsQ0FBQzs7QUFQaUIsMkJBQVksR0FBZTtJQUN6QyxTQUFTLEVBQUUsRUFBRTtDQUNkLENBQUM7O1lBUEgsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxHQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTyxVQUFVO2dCQUNqRCx5R0FBcUM7YUFDdEM7Ozt3QkFNRSxLQUFLOzs7O0lBSk4sNEJBRUU7O0lBRUYsbUNBQW1FOztJQUVuRSxnQ0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgV29ya3lsYWIuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dvcmt5bGFiL21hdGVyaWFsaXplLWFuZ3VsYXIvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi8uLi9jb25maWcnO1xuaW1wb3J0IHsgTGFiZWxNb2RlbCB9IGZyb20gJy4vbGFiZWwubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IGAkeyBjb25maWcuY29tcG9uZW50cy5wcmVmaXggfS1sYWJlbCB9YCxcbiAgdGVtcGxhdGVVcmw6ICcuL2xhYmVsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBMYWJlbENvbXBvbmVudCBpbXBsZW1lbnRzIExhYmVsTW9kZWwge1xuICBzdGF0aWMgcmVhZG9ubHkgZGVmYXVsdFByb3BzOiBMYWJlbE1vZGVsID0ge1xuICAgIGNsYXNzTmFtZTogJydcbiAgfTtcblxuICBASW5wdXQoKSBjbGFzc05hbWU6IHN0cmluZyA9IExhYmVsQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5jbGFzc05hbWU7XG5cbiAgcHVibGljIHByZWZpeCA9IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeDtcbn1cbiJdfQ==