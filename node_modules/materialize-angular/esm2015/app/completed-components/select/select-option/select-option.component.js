/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/select/select-option/select-option.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { config } from '../../../config';
export class SelectOptionComponent {
    constructor() {
        this.className = SelectOptionComponent.defaultProps.className;
        this.disabled = SelectOptionComponent.defaultProps.disabled;
        this.value = SelectOptionComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.transitionDuration = SelectOptionComponent.defaultProps.transitionDuration;
        this.isActive = false;
        this.onClickEmitter = new EventEmitter();
        this.emitClick = this.emitClick.bind(this);
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        this.content = this.optionTemplateRef.nativeElement
            ? this.optionTemplateRef.nativeElement.textContent
            : '';
    }
    /**
     * @return {?}
     */
    onClick() {
        if (!this.disabled) {
            setTimeout(this.emitClick, this.transitionDuration);
        }
    }
    /**
     * @return {?}
     */
    emitClick() {
        this.onClickEmitter.emit(this.value);
    }
}
SelectOptionComponent.defaultProps = {
    className: '',
    disabled: false,
    transitionDuration: 250,
    value: ''
};
SelectOptionComponent.decorators = [
    { type: Component, args: [{
                selector: `${config.components.prefix}-select-option }`,
                template: "<div [ngClass]=\"[prefix + '-select-option', className]\" materializeRipple (click)=\"onClick()\" [class.active]=\"isActive\"  [class.disabled]=\"disabled\" [rippleDuration]=\"transitionDuration\">\n  <div #optionTemplate>\n    <span>\n      <ng-content></ng-content>\n    </span>\n  </div>\n</div>\n\n"
            }] }
];
/** @nocollapse */
SelectOptionComponent.ctorParameters = () => [];
SelectOptionComponent.propDecorators = {
    optionTemplateRef: [{ type: ViewChild, args: ['optionTemplate', { static: true },] }],
    onClickEmitter: [{ type: Output, args: ['onClick',] }],
    className: [{ type: Input }],
    disabled: [{ type: Input }],
    value: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    SelectOptionComponent.defaultProps;
    /** @type {?} */
    SelectOptionComponent.prototype.optionTemplateRef;
    /** @type {?} */
    SelectOptionComponent.prototype.onClickEmitter;
    /** @type {?} */
    SelectOptionComponent.prototype.className;
    /** @type {?} */
    SelectOptionComponent.prototype.disabled;
    /** @type {?} */
    SelectOptionComponent.prototype.value;
    /** @type {?} */
    SelectOptionComponent.prototype.prefix;
    /** @type {?} */
    SelectOptionComponent.prototype.content;
    /** @type {?} */
    SelectOptionComponent.prototype.isActive;
    /** @type {?} */
    SelectOptionComponent.prototype.transitionDuration;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3NlbGVjdC9zZWxlY3Qtb3B0aW9uL3NlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBdUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkgsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBT3pDLE1BQU0sT0FBTyxxQkFBcUI7SUFzQmhDO1FBVlMsY0FBUyxHQUFXLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDakUsYUFBUSxHQUFZLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7UUFDaEUsVUFBSyxHQUFxQyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO1FBRXJGLFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQU92QyxJQUFJLENBQUMsa0JBQWtCLEdBQUcscUJBQXFCLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDO1FBQ2hGLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUV6QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7SUFFRCxxQkFBcUI7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYTtZQUNqRCxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxXQUFXO1lBQ2xELENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDVCxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1NBQ3JEO0lBQ0gsQ0FBQzs7OztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7QUEzQ2Usa0NBQVksR0FBc0I7SUFDaEQsU0FBUyxFQUFFLEVBQUU7SUFDYixRQUFRLEVBQUUsS0FBSztJQUNmLGtCQUFrQixFQUFFLEdBQUc7SUFDdkIsS0FBSyxFQUFFLEVBQUU7Q0FDVixDQUFDOztZQVZILFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsR0FBSSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU8sa0JBQWtCO2dCQUN6RCwwVEFBNkM7YUFDOUM7Ozs7O2dDQVNFLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7NkJBRTVDLE1BQU0sU0FBQyxTQUFTO3dCQUVoQixLQUFLO3VCQUNMLEtBQUs7b0JBQ0wsS0FBSzs7OztJQWJOLG1DQUtFOztJQUVGLGtEQUE2RTs7SUFFN0UsK0NBQWtGOztJQUVsRiwwQ0FBMEU7O0lBQzFFLHlDQUF5RTs7SUFDekUsc0NBQTRGOztJQUU1Rix1Q0FBeUM7O0lBRXpDLHdDQUE0Qjs7SUFDNUIseUNBQXlCOztJQUN6QixtREFBa0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgV29ya3lsYWIuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3dvcmt5bGFiL21hdGVyaWFsaXplLWFuZ3VsYXIvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBBZnRlckNvbnRlbnRDaGVja2VkLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuLi8uLi8uLi9jb25maWcnO1xuaW1wb3J0IHsgU2VsZWN0T3B0aW9uTW9kZWwgfSBmcm9tICcuL3NlbGVjdC1vcHRpb24ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IGAkeyBjb25maWcuY29tcG9uZW50cy5wcmVmaXggfS1zZWxlY3Qtb3B0aW9uIH1gLFxuICB0ZW1wbGF0ZVVybDogJy4vc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2VsZWN0T3B0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50Q2hlY2tlZCwgU2VsZWN0T3B0aW9uTW9kZWwge1xuICBzdGF0aWMgcmVhZG9ubHkgZGVmYXVsdFByb3BzOiBTZWxlY3RPcHRpb25Nb2RlbCA9IHtcbiAgICBjbGFzc05hbWU6ICcnLFxuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB0cmFuc2l0aW9uRHVyYXRpb246IDI1MCxcbiAgICB2YWx1ZTogJydcbiAgfTtcblxuICBAVmlld0NoaWxkKCdvcHRpb25UZW1wbGF0ZScsIHsgc3RhdGljOiB0cnVlIH0pIG9wdGlvblRlbXBsYXRlUmVmOiBFbGVtZW50UmVmO1xuXG4gIEBPdXRwdXQoJ29uQ2xpY2snKSBvbkNsaWNrRW1pdHRlcjogRXZlbnRFbWl0dGVyPHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBudWxsPjtcblxuICBASW5wdXQoKSBjbGFzc05hbWU6IHN0cmluZyA9IFNlbGVjdE9wdGlvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMuY2xhc3NOYW1lO1xuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbiA9IFNlbGVjdE9wdGlvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMuZGlzYWJsZWQ7XG4gIEBJbnB1dCgpIHZhbHVlOiBzdHJpbmcgfCBudW1iZXIgfCBib29sZWFuIHwgbnVsbCA9IFNlbGVjdE9wdGlvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMudmFsdWU7XG5cbiAgcHVibGljIHByZWZpeCA9IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeDtcblxuICBwdWJsaWMgY29udGVudDogSFRNTEVsZW1lbnQ7XG4gIHB1YmxpYyBpc0FjdGl2ZTogYm9vbGVhbjtcbiAgcHVibGljIHRyYW5zaXRpb25EdXJhdGlvbjogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMudHJhbnNpdGlvbkR1cmF0aW9uID0gU2VsZWN0T3B0aW9uQ29tcG9uZW50LmRlZmF1bHRQcm9wcy50cmFuc2l0aW9uRHVyYXRpb247XG4gICAgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMub25DbGlja0VtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICB0aGlzLmVtaXRDbGljayA9IHRoaXMuZW1pdENsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudENoZWNrZWQoKSB7XG4gICAgdGhpcy5jb250ZW50ID0gdGhpcy5vcHRpb25UZW1wbGF0ZVJlZi5uYXRpdmVFbGVtZW50XG4gICAgICA/IHRoaXMub3B0aW9uVGVtcGxhdGVSZWYubmF0aXZlRWxlbWVudC50ZXh0Q29udGVudFxuICAgICAgOiAnJztcbiAgfVxuXG4gIG9uQ2xpY2soKSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMuZW1pdENsaWNrLCB0aGlzLnRyYW5zaXRpb25EdXJhdGlvbik7XG4gICAgfVxuICB9XG5cbiAgZW1pdENsaWNrKCkge1xuICAgIHRoaXMub25DbGlja0VtaXR0ZXIuZW1pdCh0aGlzLnZhbHVlKTtcbiAgfVxufVxuIl19