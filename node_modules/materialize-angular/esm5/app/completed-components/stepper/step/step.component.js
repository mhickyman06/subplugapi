/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/stepper/step/step.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, TemplateRef, ViewChild } from '@angular/core';
import { config } from '../../../config';
var StepComponent = /** @class */ (function () {
    function StepComponent() {
        this.prefix = config.components.prefix;
        this.isCompleted = false;
    }
    StepComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-step }",
                    template: "<ng-template #indicatorTemplate>\n  <div [ngClass]=\"prefix + '-step-indicator'\">\n    <materialize-icon [className]=\"prefix + '-step-indicator-icon'\" *ngIf=\"isCompleted\">done</materialize-icon>\n    <ng-content select=\"materialize-step-indicator\" *ngIf=\"!isCompleted\"></ng-content>\n  </div>\n</ng-template>\n<ng-template #labelTemplate>\n  <ng-content select=\"materialize-step-label\"></ng-content>\n</ng-template>\n"
                }] }
    ];
    /** @nocollapse */
    StepComponent.ctorParameters = function () { return []; };
    StepComponent.propDecorators = {
        labelTemplate: [{ type: ViewChild, args: ['labelTemplate', { static: false },] }],
        indicatorTemplate: [{ type: ViewChild, args: ['indicatorTemplate', { static: false },] }]
    };
    return StepComponent;
}());
export { StepComponent };
if (false) {
    /** @type {?} */
    StepComponent.prototype.labelTemplate;
    /** @type {?} */
    StepComponent.prototype.indicatorTemplate;
    /** @type {?} */
    StepComponent.prototype.prefix;
    /** @type {?} */
    StepComponent.prototype.isCompleted;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3N0ZXBwZXIvc3RlcC9zdGVwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXpDO0lBWUU7UUFKTyxXQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUM7UUFLdkMsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQzs7Z0JBZEYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sWUFBVTtvQkFDaEQsd2JBQW9DO2lCQUNyQzs7Ozs7Z0NBRUUsU0FBUyxTQUFDLGVBQWUsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7b0NBQzVDLFNBQVMsU0FBQyxtQkFBbUIsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7O0lBU25ELG9CQUFDO0NBQUEsQUFmRCxJQWVDO1NBWFksYUFBYTs7O0lBQ3hCLHNDQUErRTs7SUFDL0UsMENBQXVGOztJQUV2RiwrQkFBeUM7O0lBRXpDLG9DQUE0QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBXb3JreWxhYi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd29ya3lsYWIvbWF0ZXJpYWxpemUtYW5ndWxhci9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBgJHsgY29uZmlnLmNvbXBvbmVudHMucHJlZml4IH0tc3RlcCB9YCxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0ZXAuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBDb21wb25lbnQge1xuICBAVmlld0NoaWxkKCdsYWJlbFRlbXBsYXRlJywgeyBzdGF0aWM6IGZhbHNlIH0pIGxhYmVsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBWaWV3Q2hpbGQoJ2luZGljYXRvclRlbXBsYXRlJywgeyBzdGF0aWM6IGZhbHNlIH0pIGluZGljYXRvclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIHB1YmxpYyBwcmVmaXggPSBjb25maWcuY29tcG9uZW50cy5wcmVmaXg7XG5cbiAgcHVibGljIGlzQ29tcGxldGVkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaXNDb21wbGV0ZWQgPSBmYWxzZTtcbiAgfVxufVxuIl19