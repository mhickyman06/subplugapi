/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/select/select-option/select-option.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { config } from '../../../config';
var SelectOptionComponent = /** @class */ (function () {
    function SelectOptionComponent() {
        this.className = SelectOptionComponent.defaultProps.className;
        this.disabled = SelectOptionComponent.defaultProps.disabled;
        this.value = SelectOptionComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.transitionDuration = SelectOptionComponent.defaultProps.transitionDuration;
        this.isActive = false;
        this.onClickEmitter = new EventEmitter();
        this.emitClick = this.emitClick.bind(this);
    }
    /**
     * @return {?}
     */
    SelectOptionComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
        this.content = this.optionTemplateRef.nativeElement
            ? this.optionTemplateRef.nativeElement.textContent
            : '';
    };
    /**
     * @return {?}
     */
    SelectOptionComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            setTimeout(this.emitClick, this.transitionDuration);
        }
    };
    /**
     * @return {?}
     */
    SelectOptionComponent.prototype.emitClick = /**
     * @return {?}
     */
    function () {
        this.onClickEmitter.emit(this.value);
    };
    SelectOptionComponent.defaultProps = {
        className: '',
        disabled: false,
        transitionDuration: 250,
        value: ''
    };
    SelectOptionComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-select-option }",
                    template: "<div [ngClass]=\"[prefix + '-select-option', className]\" materializeRipple (click)=\"onClick()\" [class.active]=\"isActive\"  [class.disabled]=\"disabled\" [rippleDuration]=\"transitionDuration\">\n  <div #optionTemplate>\n    <span>\n      <ng-content></ng-content>\n    </span>\n  </div>\n</div>\n\n"
                }] }
    ];
    /** @nocollapse */
    SelectOptionComponent.ctorParameters = function () { return []; };
    SelectOptionComponent.propDecorators = {
        optionTemplateRef: [{ type: ViewChild, args: ['optionTemplate', { static: true },] }],
        onClickEmitter: [{ type: Output, args: ['onClick',] }],
        className: [{ type: Input }],
        disabled: [{ type: Input }],
        value: [{ type: Input }]
    };
    return SelectOptionComponent;
}());
export { SelectOptionComponent };
if (false) {
    /** @type {?} */
    SelectOptionComponent.defaultProps;
    /** @type {?} */
    SelectOptionComponent.prototype.optionTemplateRef;
    /** @type {?} */
    SelectOptionComponent.prototype.onClickEmitter;
    /** @type {?} */
    SelectOptionComponent.prototype.className;
    /** @type {?} */
    SelectOptionComponent.prototype.disabled;
    /** @type {?} */
    SelectOptionComponent.prototype.value;
    /** @type {?} */
    SelectOptionComponent.prototype.prefix;
    /** @type {?} */
    SelectOptionComponent.prototype.content;
    /** @type {?} */
    SelectOptionComponent.prototype.isActive;
    /** @type {?} */
    SelectOptionComponent.prototype.transitionDuration;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3NlbGVjdC9zZWxlY3Qtb3B0aW9uL3NlbGVjdC1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBdUIsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkgsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR3pDO0lBMEJFO1FBVlMsY0FBUyxHQUFXLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDakUsYUFBUSxHQUFZLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7UUFDaEUsVUFBSyxHQUFxQyxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO1FBRXJGLFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQU92QyxJQUFJLENBQUMsa0JBQWtCLEdBQUcscUJBQXFCLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDO1FBQ2hGLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUV6QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7SUFFRCxxREFBcUI7OztJQUFyQjtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWE7WUFDakQsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsV0FBVztZQUNsRCxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ1QsQ0FBQzs7OztJQUVELHVDQUFPOzs7SUFBUDtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1NBQ3JEO0lBQ0gsQ0FBQzs7OztJQUVELHlDQUFTOzs7SUFBVDtRQUNFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBM0NlLGtDQUFZLEdBQXNCO1FBQ2hELFNBQVMsRUFBRSxFQUFFO1FBQ2IsUUFBUSxFQUFFLEtBQUs7UUFDZixrQkFBa0IsRUFBRSxHQUFHO1FBQ3ZCLEtBQUssRUFBRSxFQUFFO0tBQ1YsQ0FBQzs7Z0JBVkgsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0scUJBQW1CO29CQUN6RCwwVEFBNkM7aUJBQzlDOzs7OztvQ0FTRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO2lDQUU1QyxNQUFNLFNBQUMsU0FBUzs0QkFFaEIsS0FBSzsyQkFDTCxLQUFLO3dCQUNMLEtBQUs7O0lBK0JSLDRCQUFDO0NBQUEsQUFqREQsSUFpREM7U0E3Q1kscUJBQXFCOzs7SUFDaEMsbUNBS0U7O0lBRUYsa0RBQTZFOztJQUU3RSwrQ0FBa0Y7O0lBRWxGLDBDQUEwRTs7SUFDMUUseUNBQXlFOztJQUN6RSxzQ0FBNEY7O0lBRTVGLHVDQUF5Qzs7SUFFekMsd0NBQTRCOztJQUM1Qix5Q0FBeUI7O0lBQ3pCLG1EQUFrQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBXb3JreWxhYi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd29ya3lsYWIvbWF0ZXJpYWxpemUtYW5ndWxhci9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IEFmdGVyQ29udGVudENoZWNrZWQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZyc7XG5pbXBvcnQgeyBTZWxlY3RPcHRpb25Nb2RlbCB9IGZyb20gJy4vc2VsZWN0LW9wdGlvbi5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LXNlbGVjdC1vcHRpb24gfWAsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWxlY3Qtb3B0aW9uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTZWxlY3RPcHRpb25Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRDaGVja2VkLCBTZWxlY3RPcHRpb25Nb2RlbCB7XG4gIHN0YXRpYyByZWFkb25seSBkZWZhdWx0UHJvcHM6IFNlbGVjdE9wdGlvbk1vZGVsID0ge1xuICAgIGNsYXNzTmFtZTogJycsXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIHRyYW5zaXRpb25EdXJhdGlvbjogMjUwLFxuICAgIHZhbHVlOiAnJ1xuICB9O1xuXG4gIEBWaWV3Q2hpbGQoJ29wdGlvblRlbXBsYXRlJywgeyBzdGF0aWM6IHRydWUgfSkgb3B0aW9uVGVtcGxhdGVSZWY6IEVsZW1lbnRSZWY7XG5cbiAgQE91dHB1dCgnb25DbGljaycpIG9uQ2xpY2tFbWl0dGVyOiBFdmVudEVtaXR0ZXI8c3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbiB8IG51bGw+O1xuXG4gIEBJbnB1dCgpIGNsYXNzTmFtZTogc3RyaW5nID0gU2VsZWN0T3B0aW9uQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5jbGFzc05hbWU7XG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuID0gU2VsZWN0T3B0aW9uQ29tcG9uZW50LmRlZmF1bHRQcm9wcy5kaXNhYmxlZDtcbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBudWxsID0gU2VsZWN0T3B0aW9uQ29tcG9uZW50LmRlZmF1bHRQcm9wcy52YWx1ZTtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xuXG4gIHB1YmxpYyBjb250ZW50OiBIVE1MRWxlbWVudDtcbiAgcHVibGljIGlzQWN0aXZlOiBib29sZWFuO1xuICBwdWJsaWMgdHJhbnNpdGlvbkR1cmF0aW9uOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy50cmFuc2l0aW9uRHVyYXRpb24gPSBTZWxlY3RPcHRpb25Db21wb25lbnQuZGVmYXVsdFByb3BzLnRyYW5zaXRpb25EdXJhdGlvbjtcbiAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7XG4gICAgdGhpcy5vbkNsaWNrRW1pdHRlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIHRoaXMuZW1pdENsaWNrID0gdGhpcy5lbWl0Q2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50Q2hlY2tlZCgpIHtcbiAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLm9wdGlvblRlbXBsYXRlUmVmLm5hdGl2ZUVsZW1lbnRcbiAgICAgID8gdGhpcy5vcHRpb25UZW1wbGF0ZVJlZi5uYXRpdmVFbGVtZW50LnRleHRDb250ZW50XG4gICAgICA6ICcnO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHNldFRpbWVvdXQodGhpcy5lbWl0Q2xpY2ssIHRoaXMudHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICB9XG4gIH1cblxuICBlbWl0Q2xpY2soKSB7XG4gICAgdGhpcy5vbkNsaWNrRW1pdHRlci5lbWl0KHRoaXMudmFsdWUpO1xuICB9XG59XG4iXX0=