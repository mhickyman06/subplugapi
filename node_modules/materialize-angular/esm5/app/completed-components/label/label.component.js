/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/label/label.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, Input } from '@angular/core';
import { config } from '../../config';
var LabelComponent = /** @class */ (function () {
    function LabelComponent() {
        this.className = LabelComponent.defaultProps.className;
        this.prefix = config.components.prefix;
    }
    LabelComponent.defaultProps = {
        className: ''
    };
    LabelComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-label }",
                    template: "<label [ngClass]=\"[prefix + '-label', className]\">\n  <ng-content></ng-content>\n</label>\n"
                }] }
    ];
    LabelComponent.propDecorators = {
        className: [{ type: Input }]
    };
    return LabelComponent;
}());
export { LabelComponent };
if (false) {
    /** @type {?} */
    LabelComponent.defaultProps;
    /** @type {?} */
    LabelComponent.prototype.className;
    /** @type {?} */
    LabelComponent.prototype.prefix;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWF0ZXJpYWxpemUtYW5ndWxhci8iLCJzb3VyY2VzIjpbImFwcC9jb21wbGV0ZWQtY29tcG9uZW50cy9sYWJlbC9sYWJlbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUd0QztJQUFBO1FBU1csY0FBUyxHQUFXLGNBQWMsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDO1FBRTVELFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztJQUMzQyxDQUFDO0lBUGlCLDJCQUFZLEdBQWU7UUFDekMsU0FBUyxFQUFFLEVBQUU7S0FDZCxDQUFDOztnQkFQSCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFNLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxhQUFXO29CQUNqRCx5R0FBcUM7aUJBQ3RDOzs7NEJBTUUsS0FBSzs7SUFHUixxQkFBQztDQUFBLEFBWkQsSUFZQztTQVJZLGNBQWM7OztJQUN6Qiw0QkFFRTs7SUFFRixtQ0FBbUU7O0lBRW5FLGdDQUF5QyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBXb3JreWxhYi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd29ya3lsYWIvbWF0ZXJpYWxpemUtYW5ndWxhci9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XG5pbXBvcnQgeyBMYWJlbE1vZGVsIH0gZnJvbSAnLi9sYWJlbC5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LWxhYmVsIH1gLFxuICB0ZW1wbGF0ZVVybDogJy4vbGFiZWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIExhYmVsQ29tcG9uZW50IGltcGxlbWVudHMgTGFiZWxNb2RlbCB7XG4gIHN0YXRpYyByZWFkb25seSBkZWZhdWx0UHJvcHM6IExhYmVsTW9kZWwgPSB7XG4gICAgY2xhc3NOYW1lOiAnJ1xuICB9O1xuXG4gIEBJbnB1dCgpIGNsYXNzTmFtZTogc3RyaW5nID0gTGFiZWxDb21wb25lbnQuZGVmYXVsdFByb3BzLmNsYXNzTmFtZTtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xufVxuIl19