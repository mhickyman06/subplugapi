/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/slider/slider-option/slider-option.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { config } from '../../../config';
var SliderOptionComponent = /** @class */ (function () {
    function SliderOptionComponent() {
        this.className = SliderOptionComponent.defaultProps.className;
        this.value = SliderOptionComponent.defaultProps.value;
        this.prefix = config.components.prefix;
        this.isActive = false;
        this.onClickEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SliderOptionComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.onClickEmitter.emit(this.value);
    };
    SliderOptionComponent.defaultProps = {
        className: '',
        value: null
    };
    SliderOptionComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-slider-option }",
                    template: "<div [ngClass]=\"[prefix + '-slider-option-container', className]\"\n  [class.active]=\"isActive\"\n\n  (click)=\"onClick()\"\n  #template>\n  <ng-content></ng-content>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    SliderOptionComponent.ctorParameters = function () { return []; };
    SliderOptionComponent.propDecorators = {
        templateRef: [{ type: ViewChild, args: ['template', { static: true },] }],
        className: [{ type: Input }],
        value: [{ type: Input }],
        onClickEmitter: [{ type: Output, args: ['onClick',] }]
    };
    return SliderOptionComponent;
}());
export { SliderOptionComponent };
if (false) {
    /** @type {?} */
    SliderOptionComponent.defaultProps;
    /** @type {?} */
    SliderOptionComponent.prototype.templateRef;
    /** @type {?} */
    SliderOptionComponent.prototype.className;
    /** @type {?} */
    SliderOptionComponent.prototype.value;
    /** @type {?} */
    SliderOptionComponent.prototype.onClickEmitter;
    /** @type {?} */
    SliderOptionComponent.prototype.prefix;
    /** @type {?} */
    SliderOptionComponent.prototype.isActive;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL3NsaWRlci9zbGlkZXItb3B0aW9uL3NsaWRlci1vcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHekM7SUFvQkU7UUFSUyxjQUFTLEdBQVcscUJBQXFCLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQztRQUNqRSxVQUFLLEdBQXFDLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7UUFJckYsV0FBTSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDO1FBSXZDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUMzQyxDQUFDOzs7O0lBRUQsdUNBQU87OztJQUFQO1FBQ0UsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUF0QmUsa0NBQVksR0FBc0I7UUFDaEQsU0FBUyxFQUFFLEVBQUU7UUFDYixLQUFLLEVBQUUsSUFBSTtLQUNaLENBQUM7O2dCQVJILFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQU0sTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLHFCQUFtQjtvQkFDekQsOExBQTZDO2lCQUM5Qzs7Ozs7OEJBT0UsU0FBUyxTQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7NEJBRXRDLEtBQUs7d0JBQ0wsS0FBSztpQ0FFTCxNQUFNLFNBQUMsU0FBUzs7SUFhbkIsNEJBQUM7Q0FBQSxBQTVCRCxJQTRCQztTQXhCWSxxQkFBcUI7OztJQUNoQyxtQ0FHRTs7SUFFRiw0Q0FBaUU7O0lBRWpFLDBDQUEwRTs7SUFDMUUsc0NBQTRGOztJQUU1RiwrQ0FBa0Y7O0lBRWxGLHVDQUF5Qzs7SUFDekMseUNBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFdvcmt5bGFiLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS93b3JreWxhYi9tYXRlcmlhbGl6ZS1hbmd1bGFyL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcbmltcG9ydCB7IFNsaWRlck9wdGlvbk1vZGVsIH0gZnJvbSAnLi9zbGlkZXItb3B0aW9uLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBgJHsgY29uZmlnLmNvbXBvbmVudHMucHJlZml4IH0tc2xpZGVyLW9wdGlvbiB9YCxcbiAgdGVtcGxhdGVVcmw6ICcuL3NsaWRlci1vcHRpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNsaWRlck9wdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIFNsaWRlck9wdGlvbk1vZGVsIHtcbiAgc3RhdGljIHJlYWRvbmx5IGRlZmF1bHRQcm9wczogU2xpZGVyT3B0aW9uTW9kZWwgPSB7XG4gICAgY2xhc3NOYW1lOiAnJyxcbiAgICB2YWx1ZTogbnVsbFxuICB9O1xuXG4gIEBWaWV3Q2hpbGQoJ3RlbXBsYXRlJywgeyBzdGF0aWM6IHRydWUgfSkgdGVtcGxhdGVSZWY6IEVsZW1lbnRSZWY7XG5cbiAgQElucHV0KCkgY2xhc3NOYW1lOiBzdHJpbmcgPSBTbGlkZXJPcHRpb25Db21wb25lbnQuZGVmYXVsdFByb3BzLmNsYXNzTmFtZTtcbiAgQElucHV0KCkgdmFsdWU6IG51bWJlciB8IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsID0gU2xpZGVyT3B0aW9uQ29tcG9uZW50LmRlZmF1bHRQcm9wcy52YWx1ZTtcblxuICBAT3V0cHV0KCdvbkNsaWNrJykgb25DbGlja0VtaXR0ZXI6IEV2ZW50RW1pdHRlcjxudW1iZXIgfCBzdHJpbmcgfCBib29sZWFuIHwgbnVsbD47XG5cbiAgcHVibGljIHByZWZpeCA9IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeDtcbiAgcHVibGljIGlzQWN0aXZlOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyLmVtaXQodGhpcy52YWx1ZSk7XG4gIH1cbn1cbiJdfQ==