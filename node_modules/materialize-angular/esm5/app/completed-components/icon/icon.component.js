/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/icon/icon.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ICON_SIZES } from './icon.model';
import { config } from '../../config';
var IconComponent = /** @class */ (function () {
    function IconComponent() {
        this.className = IconComponent.defaultProps.className;
        this.size = IconComponent.defaultProps.size;
        this.prefix = config.components.prefix;
        this.onClickEmitter = new EventEmitter();
        this.onBlurEmitter = new EventEmitter();
    }
    /**
     * @return {?}
     */
    IconComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.onClickEmitter.emit();
    };
    /**
     * @return {?}
     */
    IconComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.onBlurEmitter.emit();
    };
    IconComponent.defaultProps = {
        className: '',
        size: ICON_SIZES.NONE
    };
    IconComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-icon }",
                    template: "<span class=\"icon\" [ngClass]=\"[prefix + '-icon', size, className]\" (click)=\"onClick()\" (blur)=\"onBlur()\">\n  <ng-content></ng-content>\n</span>\n"
                }] }
    ];
    /** @nocollapse */
    IconComponent.ctorParameters = function () { return []; };
    IconComponent.propDecorators = {
        onClickEmitter: [{ type: Output, args: ['onClick',] }],
        onBlurEmitter: [{ type: Output, args: ['onBlur',] }],
        className: [{ type: Input }],
        size: [{ type: Input }]
    };
    return IconComponent;
}());
export { IconComponent };
if (false) {
    /** @type {?} */
    IconComponent.defaultProps;
    /** @type {?} */
    IconComponent.prototype.onClickEmitter;
    /** @type {?} */
    IconComponent.prototype.onBlurEmitter;
    /** @type {?} */
    IconComponent.prototype.className;
    /** @type {?} */
    IconComponent.prototype.size;
    /** @type {?} */
    IconComponent.prototype.prefix;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9tYXRlcmlhbGl6ZS1hbmd1bGFyLyIsInNvdXJjZXMiOlsiYXBwL2NvbXBsZXRlZC1jb21wb25lbnRzL2ljb24vaWNvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUsVUFBVSxFQUFhLE1BQU0sY0FBYyxDQUFDO0FBQ3JELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFdEM7SUFrQkU7UUFMUyxjQUFTLEdBQVcsYUFBYSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDekQsU0FBSSxHQUFlLGFBQWEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO1FBRXJELFdBQU0sR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztRQUd2QyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDekMsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBQzFDLENBQUM7Ozs7SUFFRCwrQkFBTzs7O0lBQVA7UUFDRSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7SUFFRCw4QkFBTTs7O0lBQU47UUFDRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzVCLENBQUM7SUF4QmUsMEJBQVksR0FBYztRQUN4QyxTQUFTLEVBQUUsRUFBRTtRQUNiLElBQUksRUFBRSxVQUFVLENBQUMsSUFBSTtLQUN0QixDQUFDOztnQkFSSCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFNLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxZQUFVO29CQUNoRCxxS0FBb0M7aUJBQ3JDOzs7OztpQ0FPRSxNQUFNLFNBQUMsU0FBUztnQ0FDaEIsTUFBTSxTQUFDLFFBQVE7NEJBRWYsS0FBSzt1QkFDTCxLQUFLOztJQWdCUixvQkFBQztDQUFBLEFBOUJELElBOEJDO1NBMUJZLGFBQWE7OztJQUN4QiwyQkFHRTs7SUFFRix1Q0FBc0Q7O0lBQ3RELHNDQUFvRDs7SUFFcEQsa0NBQWtFOztJQUNsRSw2QkFBNEQ7O0lBRTVELCtCQUF5QyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBXb3JreWxhYi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd29ya3lsYWIvbWF0ZXJpYWxpemUtYW5ndWxhci9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJQ09OX1NJWkVTLCBJY29uTW9kZWwgfSBmcm9tICcuL2ljb24ubW9kZWwnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vY29uZmlnJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBgJHsgY29uZmlnLmNvbXBvbmVudHMucHJlZml4IH0taWNvbiB9YCxcbiAgdGVtcGxhdGVVcmw6ICcuL2ljb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEljb25Db21wb25lbnQgaW1wbGVtZW50cyBJY29uTW9kZWwge1xuICBzdGF0aWMgcmVhZG9ubHkgZGVmYXVsdFByb3BzOiBJY29uTW9kZWwgPSB7XG4gICAgY2xhc3NOYW1lOiAnJyxcbiAgICBzaXplOiBJQ09OX1NJWkVTLk5PTkVcbiAgfTtcblxuICBAT3V0cHV0KCdvbkNsaWNrJykgb25DbGlja0VtaXR0ZXI6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgQE91dHB1dCgnb25CbHVyJykgb25CbHVyRW1pdHRlcjogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuXG4gIEBJbnB1dCgpIGNsYXNzTmFtZTogc3RyaW5nID0gSWNvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMuY2xhc3NOYW1lO1xuICBASW5wdXQoKSBzaXplOiBJQ09OX1NJWkVTID0gSWNvbkNvbXBvbmVudC5kZWZhdWx0UHJvcHMuc2l6ZTtcblxuICBwdWJsaWMgcHJlZml4ID0gY29uZmlnLmNvbXBvbmVudHMucHJlZml4O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMub25DbGlja0VtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgdGhpcy5vbkJsdXJFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICB0aGlzLm9uQ2xpY2tFbWl0dGVyLmVtaXQoKTtcbiAgfVxuXG4gIG9uQmx1cigpIHtcbiAgICB0aGlzLm9uQmx1ckVtaXR0ZXIuZW1pdCgpO1xuICB9XG59XG4iXX0=