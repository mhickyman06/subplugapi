/**
 * @fileoverview added by tsickle
 * Generated from: app/completed-components/scroll-spy/scroll-spy-item/scroll-spy-item.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Workylab. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/workylab/materialize-angular/master/LICENSE
 */
import { Component, ElementRef, Input } from '@angular/core';
import { config } from '../../../config';
var ScrollSpyItemComponent = /** @class */ (function () {
    function ScrollSpyItemComponent(element) {
        this.element = element;
        this.className = ScrollSpyItemComponent.defaultProps.className;
        this.id = ScrollSpyItemComponent.defaultProps.id;
    }
    ScrollSpyItemComponent.defaultProps = {
        className: '',
        id: ''
    };
    ScrollSpyItemComponent.decorators = [
        { type: Component, args: [{
                    selector: config.components.prefix + "-scroll-spy-item",
                    template: "<div [attr.id]=\"id\">\n  <ng-content></ng-content>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    ScrollSpyItemComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ScrollSpyItemComponent.propDecorators = {
        className: [{ type: Input }],
        id: [{ type: Input }]
    };
    return ScrollSpyItemComponent;
}());
export { ScrollSpyItemComponent };
if (false) {
    /** @type {?} */
    ScrollSpyItemComponent.defaultProps;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.className;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.id;
    /** @type {?} */
    ScrollSpyItemComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdGVyaWFsaXplLWFuZ3VsYXIvIiwic291cmNlcyI6WyJhcHAvY29tcGxldGVkLWNvbXBvbmVudHMvc2Nyb2xsLXNweS9zY3JvbGwtc3B5LWl0ZW0vc2Nyb2xsLXNweS1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFRQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR3pDO0lBYUUsZ0NBQW1CLE9BQW1CO1FBQW5CLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFIN0IsY0FBUyxHQUFXLHNCQUFzQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDbEUsT0FBRSxHQUFXLHNCQUFzQixDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7SUFHN0QsQ0FBQztJQVRlLG1DQUFZLEdBQXVCO1FBQ2pELFNBQVMsRUFBRSxFQUFFO1FBQ2IsRUFBRSxFQUFFLEVBQUU7S0FDUCxDQUFDOztnQkFSSCxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFNLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxxQkFBbUI7b0JBQ3pELHlFQUErQztpQkFDaEQ7Ozs7Z0JBUG1CLFVBQVU7Ozs0QkFjM0IsS0FBSztxQkFDTCxLQUFLOztJQUlSLDZCQUFDO0NBQUEsQUFmRCxJQWVDO1NBWFksc0JBQXNCOzs7SUFDakMsb0NBR0U7O0lBRUYsMkNBQTJFOztJQUMzRSxvQ0FBNkQ7O0lBRWpELHlDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBXb3JreWxhYi4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vd29ya3lsYWIvbWF0ZXJpYWxpemUtYW5ndWxhci9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZyc7XG5pbXBvcnQgeyBTY3JvbGxTcHlJdGVtTW9kZWwgfSBmcm9tICcuL3Njcm9sbC1zcHktaXRlbS5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogYCR7IGNvbmZpZy5jb21wb25lbnRzLnByZWZpeCB9LXNjcm9sbC1zcHktaXRlbWAsXG4gIHRlbXBsYXRlVXJsOiAnLi9zY3JvbGwtc3B5LWl0ZW0uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFNjcm9sbFNweUl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBTY3JvbGxTcHlJdGVtTW9kZWwge1xuICBzdGF0aWMgcmVhZG9ubHkgZGVmYXVsdFByb3BzOiBTY3JvbGxTcHlJdGVtTW9kZWwgPSB7XG4gICAgY2xhc3NOYW1lOiAnJyxcbiAgICBpZDogJydcbiAgfTtcblxuICBASW5wdXQoKSBjbGFzc05hbWU6IHN0cmluZyA9IFNjcm9sbFNweUl0ZW1Db21wb25lbnQuZGVmYXVsdFByb3BzLmNsYXNzTmFtZTtcbiAgQElucHV0KCkgaWQ6IHN0cmluZyA9IFNjcm9sbFNweUl0ZW1Db21wb25lbnQuZGVmYXVsdFByb3BzLmlkO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50OiBFbGVtZW50UmVmKSB7XG4gIH1cbn1cbiJdfQ==