{"version":3,"file":"ngx-countup.js","sources":["ngx-countup/lib/count-up.directive.ts","ngx-countup/lib/count-up.module.ts","ngx-countup/public_api.ts","ngx-countup/ngx-countup.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  NgZone, Inject, PLATFORM_ID\n} from '@angular/core';\nimport { CountUp, CountUpOptions } from 'countup.js';\nimport {isPlatformBrowser} from '@angular/common';\n\n@Directive({\n  selector: '[countUp]'\n})\nexport class CountUpDirective implements OnChanges {\n\n  countUp: CountUp;\n  // the value you want to count to\n  @Input('countUp') endVal: number;\n  // previous end val enables us to count from last endVal\n  // when endVal is changed\n  previousEndVal: number;\n\n  @Input() options: CountUpOptions = {};\n  @Input() reanimateOnClick = true;\n  @Output() complete = new EventEmitter<void>();\n\n  // Re-animate if preference is set.\n  @HostListener('click')\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  constructor(\n    private el: ElementRef,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    // don't animate server-side (universal)\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (changes.endVal && changes.endVal.currentValue !== undefined) {\n      if (this.previousEndVal !== undefined) {\n        this.options = {\n          ...this.options,\n          startVal: this.previousEndVal\n        };\n      }\n      this.countUp = new CountUp(this.el.nativeElement, this.endVal, this.options);\n      this.animate();\n      this.previousEndVal = this.endVal;\n    }\n  }\n\n  private animate() {\n    this.zone.runOutsideAngular(() => {\n      this.countUp.reset();\n      this.countUp.start(() => {\n        this.zone.run(() => {\n          this.complete.emit();\n        });\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CountUpDirective } from './count-up.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [CountUpDirective],\n  exports: [CountUpDirective]\n})\nexport class CountUpModule { }\n","/*\n * Public API Surface of count-up\n */\n\nexport * from './lib/count-up.module';\nexport * from './lib/count-up.directive';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}